<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on Coooody&#39;s</title>
    <link>https://Cody2333.github.io/blog/categories/javascript/</link>
    <description>Recent content in javascript on Coooody&#39;s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 22 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://Cody2333.github.io/blog/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>理解nodeJs中的stream</title>
      <link>https://Cody2333.github.io/blog/posts/%E7%90%86%E8%A7%A3node-js%E4%B8%AD%E7%9A%84stream/</link>
      <pubDate>Mon, 22 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://Cody2333.github.io/blog/posts/%E7%90%86%E8%A7%A3node-js%E4%B8%AD%E7%9A%84stream/</guid>
      <description>简介 主要对stream这个概念做一个形象的描述和理解，同时介绍一下比较常用的API。主要参考了Node.js的官方文档。 stream的种类 Readable</description>
    </item>
    
    <item>
      <title>填坑-前端导出csv文件的方法</title>
      <link>https://Cody2333.github.io/blog/posts/%E5%A1%AB%E5%9D%91-%E5%89%8D%E7%AB%AF%E5%AF%BC%E5%87%BAcsv%E6%96%87%E4%BB%B6/</link>
      <pubDate>Tue, 18 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://Cody2333.github.io/blog/posts/%E5%A1%AB%E5%9D%91-%E5%89%8D%E7%AB%AF%E5%AF%BC%E5%87%BAcsv%E6%96%87%E4%BB%B6/</guid>
      <description>在前后端分离的情况下，通常前端浏览器提供用户文件下载的功能的实现方式如下： 前端请求后端api 后端根据前端的请求生成一个文件 后端返回一个下载的</description>
    </item>
    
  </channel>
</rss>